// Підключаємо бібліотеку iostream, яка забезпечує введення та виведення даних через потоки (наприклад, std::cin та std::cout)
#include <iostream>

// Підключаємо бібліотеку cmath, щоб використовувати математичні функції, зокрема sqrt() для обчислення квадратного кореня
#include <cmath>

// Використовуємо стандартний простір імен, щоб спростити звернення до стандартних функцій та об'єктів (наприклад, std::cout -> cout)
using namespace std;


// Функція isPrime перевіряє, чи є задане число простим.
// Просте число – це число, що більше за 1 і має рівно два різних натуральних дільники: 1 і саме число.
bool isPrime(int n) {
    // Перша перевірка: чи є число меншим за 2?
    // Згідно з визначенням, простими є лише числа, що більше або рівні 2.
    if (n < 2)
        // Якщо число менше 2, повертаємо false, оскільки число не може бути простим.
        return false;

    // Ми будемо перевіряти можливі дільники від 2 до квадратного кореня з n.
    // Математично доведено, що якщо n має дільник, відмінний від 1 та n, то принаймні один з них обов'язково не перевищує sqrt(n).
    // Це дозволяє зменшити кількість ітерацій для перевірки простоти числа.
    // Обчислюємо квадратний корінь з n за допомогою функції sqrt(), перетворюючи результат до цілого типу.
    for (int i = 2; i <= sqrt(n); i++) {
        // Для кожного можливого дільника i перевіряємо, чи ділиться n націло на i.
        // Оператор % повертає залишок від ділення; якщо залишок дорівнює 0, це означає, що i є дільником n.
        if (n % i == 0)
            // Якщо знайдено хоча б один дільник, відмінний від 1 і n, число не є простим, тому повертаємо false.
            return false;
    }

    // Якщо цикл завершився без знаходження жодного дільника, це означає, що число має тільки два дільники (1 та саме число).
    // Отже, число є простим, і ми повертаємо true.
    return true;
}


// Функція main є точкою входу в програму.
// Виконання програми починається саме з цієї функції.
int main() {
    // Оголошуємо змінну num типу int, в яку буде збережено число, введене користувачем.
    int num;
    
    // Виводимо повідомлення для користувача з проханням ввести число.
    // Використовуємо cout для виведення тексту в консоль.
    cout << "Enter a num: ";
    
    // Зчитуємо введене число з консолі і зберігаємо його у змінній num.
    // cin дозволяє отримати дані, введені користувачем.
    cin >> num;

    // Викликаємо функцію isPrime, передаючи їй введене число.
    // Функція повертає значення true, якщо число є простим, або false, якщо ні.
    // Результат перевірки використовується в умовному операторі if.
    if (isPrime(num))
        // Якщо функція повернула true, виводимо повідомлення, що число є простим.
        cout << num << " is simple num";
    else
        // Якщо функція повернула false, виводимо повідомлення, що число не є простим.
        cout << num << " is not a simple num";

    // Повертаємо значення 0, що за конвенцією означає успішне завершення виконання програми.
    return 0;
}
